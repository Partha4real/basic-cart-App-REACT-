[{"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\REACT\\cart\\src\\index.js":"1","C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\REACT\\cart\\src\\App.js":"2","C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\REACT\\cart\\src\\CartItem.js":"3","C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\REACT\\cart\\src\\Cart.js":"4","C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\REACT\\cart\\src\\Navbar.js":"5"},{"size":643,"mtime":1607957918916,"results":"6","hashOfConfig":"7"},{"size":5194,"mtime":1607957843607,"results":"8","hashOfConfig":"7"},{"size":4274,"mtime":1607779246522,"results":"9","hashOfConfig":"7"},{"size":657,"mtime":1607779607241,"results":"10","hashOfConfig":"7"},{"size":924,"mtime":1607779995210,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1rubxxm",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\REACT\\cart\\src\\index.js",[],["26","27"],"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\REACT\\cart\\src\\App.js",["28","29","30"],"import React from 'react';\nimport firebase from 'firebase/app';\nimport './App.css';\nimport Cart from \"./Cart\";\nimport Navbar from \"./Navbar\";\n\nclass App extends React.Component {\n  constructor () {\n    //  Can’t use `this` yet\n    super();           // super refers to the parent class constructor        // call the constructer for my Component class in REACT \n    //  Now it’s okay though\n    this.state = {\n        products: [\n            // {\n            //     price: 999,\n            //     title: 'Watch',\n            //     qty: 1,\n            //     img: 'https://k8q7r7a2.stackpathcdn.com/wp-content/uploads/2019/06/Audemars-Piguet-Royal-Oak-Selfwinding-Perpetual-Calendar-Ultra-Thin-RD2-based-26586IP.OO_.1240IP.01-3.jpg',\n            //     id: 1\n            // }\n        ],\n        loading: true\n    } \n    this.db = firebase.firestore();\n  }\n\n  componentDidMount () {\n    // firebase\n    //   .firestore()\n    //   .collection('products')\n    //   .get()\n    //   .then((snapshot) => {\n    //     console.log(snapshot);\n    //     snapshot.docs.map((doc) => {\n    //       console.log(doc.data())\n    //     })\n\n    //     const products = snapshot.docs.map((doc) => {\n    //       const data = doc.data();\n    //       data['id'] = doc.id\n    //       return data;\n    //     });\n    //     this.setState({\n    //       products \n    //     })\n    //   });\n\n    this.db\n    .collection('products')\n    // .where('price', '==', 84900)\n    .onSnapshot((snapshot) => {\n      console.log(snapshot);\n      snapshot.docs.map((doc) => {\n        console.log(doc.data())\n      })\n\n      const products = snapshot.docs.map((doc) => {\n        const data = doc.data();\n        data['id'] = doc.id\n        return data;\n      });\n      this.setState({\n        products,\n        loading: false\n      })\n    })\n  }\n\n  handleIncreaseQuantity = (product) => {\n    const {products} = this.state;\n    const index = products.indexOf(product);\n    \n    // this changes the product in the state\n      // products[index].qty += 1;\n      // this.setState({\n      //     products\n      // })\n\n      const docRef = this.db.collection('products').doc(products[index].id);\n        docRef\n          .update({\n            qty: products[index].qty + 1\n          })\n          .then(() => {        \n            console.log('Product has been updated');\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n  }\n  handleDecreaseQuantity = (product) => {\n      const {products} = this.state;\n      const index = products.indexOf(product);\n\n      if ( products[index].qty ===0) {\n          return;\n      }\n\n      // products[index].qty -= 1;\n      // this.setState({\n      //     products,\n      // })\n\n      const docRef = this.db.collection('products').doc(products[index].id);\n        docRef\n          .update({\n            qty: products[index].qty - 1\n          })\n          .then(() => {        \n            console.log('Product has been updated');\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n  }\n  handleDeleteProduct = (id) => {\n      const {products} = this.state;\n\n      // const item = products.filter((item) => item.id !== id); //[{}]\n      // this.setState({\n      //     products: item\n      // })\n\n      const docRef = this.db.collection('products').doc(id);\n        docRef\n          .delete()\n          .then(() => {        \n            console.log('Deleted');\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n\n  }\n  getCartCount = () => {\n    const {products} = this.state;\n    let count = 0;\n    products.forEach(product => {\n      count += product.qty;\n    });\n    return count;\n  }\n  getCartTotal = () => {\n    const {products} = this.state;\n    let cartTotal = 0;\n\n    products.map((product) => {\n      cartTotal = cartTotal + product.qty * product.price;\n    })\n    return cartTotal;\n  }\n\n  addProduct = () => {\n    this.db\n      .collection('products')\n      .add(  {  // .add to add to database\n            price: 1999,\n            title: 'Pant',\n            qty: 1,\n            img: 'https://k8q7r7a2.stackpathcdn.com/wp-content/uploads/2019/06/Audemars-Piguet-Royal-Oak-Selfwinding-Perpetual-Calendar-Ultra-Thin-RD2-based-26586IP.OO_.1240IP.01-3.jpg',\n        })\n        .then((docRef) => {        // it gives a promise which contains the reference to the added doc\n          console.log('Product has been added ' +docRef)\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n  }\n\n  render () {\n    const {products, loading} = this.state;\n    console.log('1')\n    return (\n      <div className=\"App\">\n        <Navbar count={this.getCartCount()} />\n        {/* <button onClick={this.addProduct} style={{padding:20, }}>Add Product</button> */}\n        <Cart \n          products = {products}\n          onIncreaseQuantity = {this.handleIncreaseQuantity} \n          onDecreaseQuantity = {this.handleDecreaseQuantity} \n          onDeleteProduct = {this.handleDeleteProduct}\n        />\n        {loading && <h1>Loading Products..</h1>}\n        <div style= {{padding: 10, fontSize: 20}}>Total: {this.getCartTotal()}</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\REACT\\cart\\src\\CartItem.js",["31"],"import './CartItem.css';\r\n\r\n\r\nconst CartItem = (props) => {\r\n    // below comments here\r\n        const {title, price, qty, img} = props.product;\r\n        const {product, onIncreaseQuantity, onDecreaseQuantity, onDeleteProduct} = props;\r\n        return (\r\n            <div className=\"cart-item\">\r\n                <div className=\"left-block\">\r\n                    <img src={img} style={styles.image} />\r\n                </div>\r\n                <div className=\"right-block\">\r\n        <div style= { {fontSize: 25, color: 'lightblue'} }>{title}</div>\r\n        <div className=\"cart-info\">Price: {price}</div>\r\n        <div className=\"cart-info\">Quantity: {qty}</div>\r\n                    <div className=\"cart-item-actions\">\r\n                        <img alt=\"increase\" onClick={() => onIncreaseQuantity(product)} src=\"https://www.flaticon.com/svg/static/icons/svg/992/992651.svg\" className=\"action-icons\" />\r\n                        <img alt=\"decrease\" onClick={() => onDecreaseQuantity(product)} src=\"https://www.flaticon.com/svg/static/icons/svg/659/659892.svg\" className=\"action-icons\" />\r\n                        <img alt=\"delete\" onClick={() => onDeleteProduct(product.id)} src=\"https://www.flaticon.com/svg/static/icons/svg/3096/3096687.svg\" className=\"action-icons\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nconst styles = {\r\n    image: {\r\n        height: 110,\r\n        width: 110,\r\n        borderRadius: 4,\r\n        backgroundColor: '#ccc'\r\n    }\r\n}\r\n\r\nexport default CartItem;\r\n\r\n\r\n\r\n    // defining state for the component\r\n    // constructor () {\r\n    //     //  Can’t use `this` yet\r\n    //     super();           // super refers to the parent class constructor        // call the constructer for my Component class in REACT \r\n    //     //  Now it’s okay though\r\n    //     this.state = {\r\n    //         price: 999,\r\n    //         title: 'Phone',\r\n    //         qty: 1,\r\n    //         img: ''\r\n    //     }\r\n    //     // this.increaseQuantity = this.increaseQuantity.bind(this);\r\n    //     //this.testing();\r\n    // }\r\n\r\n    // testing() {\r\n    //     const promise = new Promise((resolve, reject) => {\r\n    //         setTimeout(() => {\r\n    //             resolve('done');\r\n    //         }, 5000)\r\n    //     }) \r\n\r\n    //     promise.then(() => {\r\n    //         // set state acts like syncronous call\r\n    //         this.setState({qty: this.state.qty + 10});\r\n    //         this.setState({qty: this.state.qty + 10});\r\n    //         this.setState({qty: this.state.qty + 10});\r\n\r\n    //         console.log('state ' + this.state.qty);\r\n    //     })\r\n    // }\r\n\r\n    // increaseQuantity = () => {  // the arrow function will automaticall bind the value of THIS ot the instance of the class\r\n        // this.state.qty += 1; // the value of qty changes here but React does not know about the change so it does not rerender\r\n        //console.log(this.state);\r\n\r\n        // setstate form 1 (use this form to change title, etc as it does not depend on the previous state)\r\n        // this.setState({  // it is inherited from component\r\n        //     qty: this.state.qty +1\r\n        // }, () => {\r\n        //     console.log('first' +this.state.qty)\r\n        // }) \r\n        // this.setState({  // it is inherited from component\r\n        //     qty: this.state.qty +2\r\n        // }, () => {\r\n        //     console.log('second' +this.state.qty)\r\n        // }) \r\n        \r\n        //setState form 2 (this form is used when the value to be changed depends on the previous state)\r\n    //     this.setState( (prevState) => {   //the function will be called by ReACt internally and when react does that it will pass previous State to us\r\n    //        return {\r\n    //            qty: prevState.qty + 1\r\n    //        }\r\n    //     }, () => {\r\n    //         console.log('this.state ', this.state)\r\n    //     }) \r\n    // }\r\n\r\n    \r\n    // decreaseQuantity = () => {\r\n    //     const {qty} = this.state;\r\n    //     if (qty === 0) {\r\n    //         return;\r\n    //     }  \r\n    //     this.setState((prevState) => {\r\n    //         return {\r\n    //             qty: prevState.qty - 1\r\n    //         }\r\n    //     }, () => {\r\n    //         console.log('this.state ', this.state)\r\n    //     }) \r\n    // }",["32","33"],"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\REACT\\cart\\src\\Cart.js",[],"C:\\Users\\Partha Sarathi\\Desktop\\Web Development\\REACT\\cart\\src\\Navbar.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":53,"column":31,"nodeType":"40","messageId":"41","endLine":53,"endColumn":33},{"ruleId":"42","severity":1,"message":"43","line":117,"column":14,"nodeType":"44","messageId":"45","endLine":117,"endColumn":22},{"ruleId":"38","severity":1,"message":"39","line":147,"column":28,"nodeType":"40","messageId":"41","endLine":147,"endColumn":30},{"ruleId":"46","severity":1,"message":"47","line":11,"column":21,"nodeType":"48","endLine":11,"endColumn":59},{"ruleId":"34","replacedBy":"49"},{"ruleId":"36","replacedBy":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'products' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["51"],["52"],"no-global-assign","no-unsafe-negation"]